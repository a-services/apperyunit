apply plugin: 'groovy'

/* `gradle install` can be used to install into local repo.
 * `jar` section below should be commented out for that.
 */
apply plugin: 'maven'
group = 'io.appery'

/* Version is specified in 4 places:
 * - in this file
 * - in `Utils` class
 * - in `README.adoc`
 * - in Appery DB
 */
version = '1.12'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'io.appery.apperyunit.au'
}

repositories {
    mavenCentral()
}

jar {
    baseName = 'apperyunit'

    manifest {
        attributes "Main-Class": "io.appery.apperyunit.au"
    }

    from {
        configurations.compileClasspath.filter{ it.exists() }
            .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'
    implementation 'org.apache.httpcomponents:httpclient:4.5.6'
    //compile 'com.google.code.gson:gson:2.8.0'
    testImplementation "org.spockframework:spock-core:2.0-M4-groovy-3.0"
}

/* Asciidoclet links:
 *   http://mrhaki.blogspot.com/2015/10/awesome-asciidoctor-using-asciidoctor.html
 *   https://github.com/asciidoctor/asciidoclet
 *   http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html
 *   https://docs.gradle.org/current/javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html
 */

configurations {
    asciidoclet
}

/*
dependencies {
    asciidoclet 'org.asciidoctor:asciidoclet:1.+'
}

javadoc {
    //options.docletpath = configurations.asciidoclet.files.asType(List)
    //options.doclet = 'org.asciidoctor.Asciidoclet'
    options.overview = "src/main/groovy/overview.adoc"
    options.links = [
        'http://docs.oracle.com/javase/8/docs/api/',
        'https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/'
    ]
    options.noQualifiers = ['java.lang', 'java.util']
    options.memberLevel = JavadocMemberLevel.PACKAGE
    options.addStringOption "-base-dir", "${projectDir}"
}
*/

import org.gradle.api.tasks.javadoc.*

groovydoc {
    links = [
        new Groovydoc.Link("http://docs.oracle.com/javase/8/docs/api/", \
                           "java.", "javax.")
    ]
}

task distr {
    doLast {
        println "--- version: " + version

        // Create shell scripts with proper version
        String javaOptions = "-Dnashorn.args=--language=es6"
        new File("au").text = """
            #!/usr/bin/env bash
            AU_JAR=apperyunit-${version}.jar
            java ${javaOptions} -cp \$AU_JAR io.appery.apperyunit.au "\$@"
        """.stripIndent().trim()
        new File("au.bat").text = """
            @echo off
            set AU_JAR=apperyunit-${version}.jar
            java ${javaOptions} -cp %AU_JAR% io.appery.apperyunit.au %*
        """.stripIndent().trim()

        // Delete existing `build/distr`
        ant.delete(dir: "build/distr")

        // Collect distribution files in `build/distr`.
        // This preliminary step is needed to create "apperyunit-${version}" folder in archive.
        ant.copy(todir: "build/distr/apperyunit-${version}") {
            fileset(dir: "build/libs") {
                include(name: "apperyunit-${version}.jar")
            }
            fileset(dir: ".") {

                include(name: "au.bat")
                include(name: "au")

                include(name: "README.html")
                include(name: "libraries/dependencies.json")
                include(name: "helloappery.js")
                include(name: "libraries/helloappery_lib.js")
                include(name: "license.txt")
                include(name: "parameters/*.*")
            }
        }

        // Create shell scripts
        new File("build/distr/apperyunit-${version}/au").text = """
            #!/usr/bin/env bash
            AU_JAR=apperyunit-${version}.jar
            java -Dnashorn.args=--language=es6 -cp \$AU_JAR io.appery.apperyunit.au "\$@"
        """.stripIndent().trim()
        new File("build/distr/apperyunit-${version}/au.bat").text = """
            @echo off
            set AU_JAR=apperyunit-${version}.jar
            java -Dnashorn.args=--language=es6 -cp %AU_JAR% io.appery.apperyunit.au %*
        """.stripIndent().trim()

        // Create zip file in `build`
        ant.zip(destfile: "build/apperyunit-${version}.zip") {
            zipfileset(dir: "build/distr") {
                exclude(name: "apperyunit-${version}/au")
            }
            zipfileset(dir: "build/distr", filemode: "755") {
                include(name: "apperyunit-${version}/au")
            }
        }
    }
}
